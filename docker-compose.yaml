version: "2"
services:
  zookeeper:
    image: zookeeper:3.5
    ports:
      - "2181:2181"
    logging:
      driver: none
  kafka:
    image: wurstmeister/kafka:2.12-2.3.0
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    logging:
      driver: none
    depends_on:
      - zookeeper
  clickhouse:
    image: yandex/clickhouse-server:19.13
    ports:
      - "9000:9000"
      - "8123:8123"
    volumes:
      - ./clickhouse_init.d:/docker-entrypoint-initdb.d
    depends_on:
      - kafka
  exporter:
    build: .
    volumes:
      - ./:/app
    environment:
      KAFKA_URL: kafka:9092
      ZOOKEEPER_URL: zookeeper:2181
      ETHEREUM_NODE_URL: https://mainnet.infura.io/v3/8df5d5a8b2f346289526bfcb41e03a38
      KAFKA_TOPIC: eth_exporter_events
      START_BLOCK: 7700000
      CONFIRMATIONS: 3
      BLOCK_INTERVAL: 100
    command: ["./wait-for-it.sh", "kafka:9092", "--", "npm", "start"]
    depends_on:
      - kafka
  server:
    build: .
    ports:
      - 3000:3000
    volumes:
      - ./:/app
    command: ["npm", "run", "server"]
    depends_on:
      - clickhouse
  grafana:
    image: grafana/grafana:6.7.2
    container_name: grafana
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    environment:
      - GF_SECURITY_ADMIN_USER=${ADMIN_USER}
      - GF_SECURITY_ADMIN_PASSWORD=${ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped
    expose:
      - 3000
    networks:
      - monitor-net
    labels:
      org.label-schema.group: "monitoring"  
